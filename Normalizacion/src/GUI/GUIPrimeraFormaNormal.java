/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import LOGICA.BLImportarData;
import java.util.*;
import CLASES.Atributo;
import LOGICA.BLPrimeraFormaNormal;
import javax.swing.JOptionPane;
import javax.swing.JTable;

/**
 *
 * @author carlo
 */
public final class GUIPrimeraFormaNormal extends javax.swing.JFrame {

    /**
     * Creates new form GUIPrimeraFormaNormal
     */
    BLImportarData objBLImportarData = new BLImportarData();
    BLPrimeraFormaNormal  objBLPrimeraFormaNormal = new BLPrimeraFormaNormal();
    ArrayList<Atributo> arrayCamposSeleccionados = new ArrayList<>();
    ArrayList<Atributo> arrayCamposRepeticion = new ArrayList<>();
    int numCamposRepeticion = 0;
    int numCamposSeleccionados = 0;
    ArrayList<Atributo> clavesPrimarias = new ArrayList<>();
    ArrayList<JTable> tablas = new ArrayList<>();
    
    public GUIPrimeraFormaNormal(ArrayList<Atributo> clavesPrimarias) {
        initComponents();
        this.setLocationRelativeTo(null);
        this.clavesPrimarias = clavesPrimarias;
        objBLImportarData.importarData(this.jTableUniversal,clavesPrimarias);
        arrayCamposRepeticion = objBLPrimeraFormaNormal.obtenerCamposRepeticion(this.jTableCamposRepeticion);
        numCamposRepeticion = arrayCamposRepeticion.size();
        obtenerTablas();
        activarComponentes();
        //ocultarTablas();
    }

    private GUIPrimeraFormaNormal() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTableUniversal = new javax.swing.JTable();
        jLabelEntidadUniversal = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTableCamposRepeticion = new javax.swing.JTable();
        jButtonElegir = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTableCamposSeleccionados = new javax.swing.JTable();
        jButtonEliminar = new javax.swing.JButton();
        jButtonPrimeraFormaNormal = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableEntidad3 = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTableEntidad1 = new javax.swing.JTable();
        jScrollPane6 = new javax.swing.JScrollPane();
        jTableEntidad2 = new javax.swing.JTable();
        jScrollPane7 = new javax.swing.JScrollPane();
        jTableEntidad4 = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTableUniversal.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTableUniversal);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 90, 680, 130));

        jLabelEntidadUniversal.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jLabelEntidadUniversal.setText("TABLA UNIVERSAL");
        getContentPane().add(jLabelEntidadUniversal, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 30, 330, 40));

        jLabel2.setText("Escojer los campos de los grupos de repeticion");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 80, -1, 20));

        jTableCamposRepeticion.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jTableCamposRepeticion.setEnabled(false);
        jScrollPane4.setViewportView(jTableCamposRepeticion);

        getContentPane().add(jScrollPane4, new org.netbeans.lib.awtextra.AbsoluteConstraints(840, 110, 130, 140));

        jButtonElegir.setText("Elegir -->");
        jButtonElegir.setEnabled(false);
        jButtonElegir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonElegirActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonElegir, new org.netbeans.lib.awtextra.AbsoluteConstraints(840, 270, 140, -1));

        jLabel1.setText("Campos Seleccionados");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(1100, 80, -1, 20));

        jTableCamposSeleccionados.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jTableCamposSeleccionados.setEnabled(false);
        jScrollPane5.setViewportView(jTableCamposSeleccionados);

        getContentPane().add(jScrollPane5, new org.netbeans.lib.awtextra.AbsoluteConstraints(1110, 110, 130, 140));

        jButtonEliminar.setText("<-- Eliminar");
        jButtonEliminar.setEnabled(false);
        jButtonEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEliminarActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonEliminar, new org.netbeans.lib.awtextra.AbsoluteConstraints(1120, 270, 140, -1));

        jButtonPrimeraFormaNormal.setText("Aplicar 1ra Forma normal");
        jButtonPrimeraFormaNormal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPrimeraFormaNormalActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonPrimeraFormaNormal, new org.netbeans.lib.awtextra.AbsoluteConstraints(980, 350, 260, 70));

        jTableEntidad3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane2.setViewportView(jTableEntidad3);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 540, 310, 200));

        jTableEntidad1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane3.setViewportView(jTableEntidad1);
        jTableEntidad1.getAccessibleContext().setAccessibleName("");

        getContentPane().add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 280, 310, 200));

        jTableEntidad2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane6.setViewportView(jTableEntidad2);

        getContentPane().add(jScrollPane6, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 280, 310, 200));

        jTableEntidad4.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane7.setViewportView(jTableEntidad4);

        getContentPane().add(jScrollPane7, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 550, 310, 200));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonElegirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonElegirActionPerformed
        // TODO add your handling code here:
 
        if (this.numCamposRepeticion !=0){
            if(this.jTableCamposRepeticion.getSelectedRow() >= 0){
                this.arrayCamposSeleccionados.add(this.arrayCamposRepeticion.get(this.jTableCamposRepeticion.getSelectedRow()));
                this.numCamposSeleccionados = this.arrayCamposSeleccionados.size();
                objBLImportarData.establecerClavesPrimarias(this.jTableCamposSeleccionados,this.arrayCamposSeleccionados);
                this.arrayCamposRepeticion.remove(this.jTableCamposRepeticion.getSelectedRow());
                this.numCamposRepeticion = this.arrayCamposRepeticion.size();
                objBLImportarData.establecerClavesCandidatas(jTableCamposRepeticion, arrayCamposRepeticion);
                //System.out.println("Clave candidata: "+ objEntidad.getAtributos().get((this.jTableClavesCandidatas.getSelectedRow() + numAtributoCandidato) + 1));
            }else{
                JOptionPane.showMessageDialog(null, "Debe elegir algun campo de repeticion");
            }
        }else{
            JOptionPane.showMessageDialog(null, "No existen campos de grupos repetidos");
        }

    }//GEN-LAST:event_jButtonElegirActionPerformed

    private void jButtonEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEliminarActionPerformed
        // TODO add your handling code here:
        if (this.numCamposSeleccionados !=0){
            if(this.jTableCamposSeleccionados.getSelectedRow() >= 0){
                this.arrayCamposRepeticion.add(this.arrayCamposSeleccionados.get(this.jTableCamposSeleccionados.getSelectedRow()));
                this.numCamposRepeticion = this.arrayCamposRepeticion.size();
                objBLImportarData.establecerClavesCandidatas(this.jTableCamposRepeticion,this.arrayCamposRepeticion);
                this.arrayCamposSeleccionados.remove(this.jTableCamposSeleccionados.getSelectedRow());
                this.numCamposSeleccionados = this.arrayCamposSeleccionados.size();
                objBLImportarData.establecerClavesPrimarias(jTableCamposSeleccionados, arrayCamposSeleccionados);

                //System.out.println("Clave candidata: "+ objEntidad.getAtributos().get((this.jTableClavesCandidatas.getSelectedRow() + numAtributoCandidato) + 1));
            }else{
                JOptionPane.showMessageDialog(null, "Debe elegir algun campo disponible");
            }
        }else{
            JOptionPane.showMessageDialog(null, "No existen campos disponibles");
        }
    }//GEN-LAST:event_jButtonEliminarActionPerformed

    private void jButtonPrimeraFormaNormalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPrimeraFormaNormalActionPerformed
        // TODO add your handling code here:
        objBLPrimeraFormaNormal.aplicarPrimeraForma(arrayCamposSeleccionados, tablas,this.jTableUniversal,clavesPrimarias);
    }//GEN-LAST:event_jButtonPrimeraFormaNormalActionPerformed

    public void activarComponentes(){
        this.jButtonElegir.setEnabled(true);
        this.jButtonEliminar.setEnabled(true);
        this.jTableCamposRepeticion.setEnabled(true);
        this.jTableCamposSeleccionados.setEnabled(true);
    }
    
    public void obtenerTablas(){
        tablas.add(this.jTableEntidad1);
        tablas.add(this.jTableEntidad2);
        tablas.add(this.jTableEntidad3);
        tablas.add(this.jTableEntidad4);
    }
    public void ocultarTablas(){
        for (JTable objJTable : tablas) {
            objJTable.setVisible(false);
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUIPrimeraFormaNormal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUIPrimeraFormaNormal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUIPrimeraFormaNormal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUIPrimeraFormaNormal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUIPrimeraFormaNormal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonElegir;
    private javax.swing.JButton jButtonEliminar;
    private javax.swing.JButton jButtonPrimeraFormaNormal;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabelEntidadUniversal;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JTable jTableCamposRepeticion;
    private javax.swing.JTable jTableCamposSeleccionados;
    private javax.swing.JTable jTableEntidad1;
    private javax.swing.JTable jTableEntidad2;
    private javax.swing.JTable jTableEntidad3;
    private javax.swing.JTable jTableEntidad4;
    public javax.swing.JTable jTableUniversal;
    // End of variables declaration//GEN-END:variables
}
